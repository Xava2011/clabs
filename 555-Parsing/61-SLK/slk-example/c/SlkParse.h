
// SlkParse.h - generated by the SLK parser generator 

#ifndef _SlkPARSE_H
#define _SlkPARSE_H

#ifdef __cplusplus
extern "C" {
#endif

typedef struct {
    short   (*get)  ( void );
    short   (*peek) ( int level );
} SlkToken;

typedef struct {
    short   (*mismatch) ( short symbol, short token );
    short   (*no_entry) ( short symbol, short token, int level );
    void    (*input_left) ( void );
} SlkError;

typedef struct {
    void  (*trace) ( char  *message );
    void  (*trace_depth) ( char  *message,
                           int    depth );
    void  (*trace_production) ( int  production_number );
    void  (*trace_action) ( int  action_number );
} SlkLog;

typedef void (**SlkAction) ( void );
 
enum _Slk_token_defines { 
  NUMBER_ = 257 
, END_OF_SLK_INPUT_ = 258 
}; 

enum _Slk_Nonterminal_defines { 
  NT_EXPRESSION_ = 2049 
, NT_ADDITIVE_EXPRESSION_ = 2050 
, NT_ADD_OP_ = 2051 
, NT_MULTIPLICITIVE_EXPRESSION_ = 2052 
, NT_MUL_OP_ = 2053 
, NT_EXPONENTIAL_EXPRESSION_ = 2054 
, NT_PRIMARY_EXPRESSION_ = 2055 
, NT_ADD_OP_MULTIPLICITIVE_EXPRESSION_STAR_ = 2056 
, NT_MUL_OP_EXPONENTIAL_EXPRESSION_STAR_ = 2057 
, NT_CARET_EXPONENTIAL_EXPRESSION_OPT_ = 2058 
}; 

short SlkGetTerminalIndex ( short   token );

void SlkParse ( int         display,
                SlkAction   action, 
                SlkToken    tokens, 
                SlkError    error, 
                SlkLog      log, 
                short       start_symbol ) ;

#ifdef __cplusplus
}
#endif

#endif
